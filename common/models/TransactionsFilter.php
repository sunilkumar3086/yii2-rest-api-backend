<?php
/**
 * Created by PhpStorm.
 * User: reglobe
 * Date: 6/2/16
 * Time: 5:01 PM
 */

namespace common\models\reglobe;


use common\models\Transactions;
use yii\db\ActiveQuery;

class TransactionsFilter extends ActiveQuery {

    /**
     * @inheritdoc
     * @return Transactions[]|array
     */
    public function all($db = null)
    {
        $this->addCondition();
        return parent::all($db);
    }

    /**
     * @inheritdoc
     * @return Transactions|array|null
     */
    public function one($db = null)
    {
        $this->addCondition();
        return parent::one($db);
    }

    /**
     * @param null $db
     * @return array
     */
    public function column($db = null)
    {
        $this->addCondition();
        return parent::column($db);
    }

    /**
     * @param null $db
     * @return bool|string
     */

    public function scalar($db = null)
    {
        $this->addCondition();
        return parent::scalar($db);
    }

    /**
     * @param string $q
     * @param null $db
     * @return int|string
     */
    public function count($q = '*', $db = null)
    {
        $this->addCondition();
        return parent::count($q, $db); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $q
     * @param null $db
     * @return mixed
     */

    public function sum($q, $db = null)
    {
        $this->addCondition();
        return parent::sum($q, $db); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $q
     * @param null $db
     * @return mixed
     */
    public function average($q, $db = null)
    {
        $this->addCondition();
        return parent::average($q, $db); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $q
     * @param null $db
     * @return mixed
     */

    public function min($q, $db = null)
    {
        $this->addCondition();
        return parent::min($q, $db); // TODO: Change the autogenerated stub
    }

    /**
     * @param string $q
     * @param null $db
     * @return mixed
     */
    public function max($q, $db = null)
    {
        $this->addCondition();
        return parent::max($q, $db); // TODO: Change the autogenerated stub
    }


    //------------------------------------------------------------------------------------------------------------------
    private function addCondition(){
        $this->andWhere(['deleted_at'=>null]);
    }

}